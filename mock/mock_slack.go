// Code generated by MockGen. DO NOT EDIT.
// Source: slack.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pkg "github.com/takaiyuk/kakeibo-go/pkg"
)

// MockInterfaceSlackClient is a mock of InterfaceSlackClient interface.
type MockInterfaceSlackClient struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceSlackClientMockRecorder
}

// MockInterfaceSlackClientMockRecorder is the mock recorder for MockInterfaceSlackClient.
type MockInterfaceSlackClientMockRecorder struct {
	mock *MockInterfaceSlackClient
}

// NewMockInterfaceSlackClient creates a new mock instance.
func NewMockInterfaceSlackClient(ctrl *gomock.Controller) *MockInterfaceSlackClient {
	mock := &MockInterfaceSlackClient{ctrl: ctrl}
	mock.recorder = &MockInterfaceSlackClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterfaceSlackClient) EXPECT() *MockInterfaceSlackClientMockRecorder {
	return m.recorder
}

// FetchMessages mocks base method.
func (m *MockInterfaceSlackClient) FetchMessages(arg0 string) ([]*pkg.SlackMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMessages", arg0)
	ret0, _ := ret[0].([]*pkg.SlackMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMessages indicates an expected call of FetchMessages.
func (mr *MockInterfaceSlackClientMockRecorder) FetchMessages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMessages", reflect.TypeOf((*MockInterfaceSlackClient)(nil).FetchMessages), arg0)
}

// FilterMessages mocks base method.
func (m *MockInterfaceSlackClient) FilterMessages(arg0 []*pkg.SlackMessage, arg1 *pkg.FilterSlackMessagesOptions) []*pkg.SlackMessage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FilterMessages", arg0, arg1)
	ret0, _ := ret[0].([]*pkg.SlackMessage)
	return ret0
}

// FilterMessages indicates an expected call of FilterMessages.
func (mr *MockInterfaceSlackClientMockRecorder) FilterMessages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FilterMessages", reflect.TypeOf((*MockInterfaceSlackClient)(nil).FilterMessages), arg0, arg1)
}

// GetConversationHistory mocks base method.
func (m *MockInterfaceSlackClient) GetConversationHistory(arg0 string) ([]*pkg.SlackMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConversationHistory", arg0)
	ret0, _ := ret[0].([]*pkg.SlackMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConversationHistory indicates an expected call of GetConversationHistory.
func (mr *MockInterfaceSlackClientMockRecorder) GetConversationHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConversationHistory", reflect.TypeOf((*MockInterfaceSlackClient)(nil).GetConversationHistory), arg0)
}
